Zadatak
Potrebno je napisati funkciju okreni koja okreće prvu polovicu i drugu polovicu stringa kao u sljedećim primjerima:

ABCDEF  	postaje		CBAFED
ABCDEFG	postaje		CBADGFE
ABCDEFGHIJKLMNOP	postaje		HGFEDCBAPONMLKJI
Dakle, ukoliko string ima paran broj slova, prva polovica stringa ABC se okreće naopako te postaje CBA, a druga polovica stringa DEF se okreće tako da postaje FED. Ukoliko string ima neparan broj slova, slovo u sredini (D u drugom primjeru) ostaje na svom mjestu, a dijelovi ispred (ABC) i iza (EFG) sredine se okreću pa se dobija: CBA D GFE (bez razmaka). Radi lakšeg lančanog pozivanja funkcija treba vraćati pokazivač na prvo slovo stringa.

Napomena: Pri rješavanju zadatka nije dozvoljeno koristiti funkcije iz biblioteka string.h, stdlib.h kao ni funkcije sprintf i sscanf iz biblioteke stdio.h. Nije dozvoljeno kreirati pomoćne stringove u funkciji ili globalno. No dozvoljeno je kreirati histogram, jer je njegova veličina fiksna i unaprijed poznata.

MOJ KOD:

#include <stdio.h>

char *okreni(char *s);

int main() {
  char tekst[] = "ABCDEFGHIJKLMN";
  printf("%s", okreni(tekst));
  return 0;
}
// ABCDEF --> CBAFED
char *okreni(char *s) {
  char p;
  int strlen = 0;
  while (*s != '\0') {
    strlen++;
    s++;
  }
  s -= strlen; // da se vrati na pocetak

  if (strlen % 2 == 0) { // ABCDEF --> strlen=6,j=2,i=0
    int i, j = strlen / 2 - 1;
    for (i = 0; i < strlen / 4; i++) {
      p = *(s + i);
      *(s + i) = *(s + j);
      *(s + j) = p;
      j--;
    }
    j = strlen - 1;
    for (i = strlen / 2; i < (3 * strlen) / 4; i++) {
      p = *(s + i);
      *(s + i) = *(s + j);
      *(s + j) = p;
      j--;
    }
  } else {
    int i, j = strlen / 2 - 1;
    for (i = 0; i < strlen / 4; i++) {
      p = *(s + i);
      *(s + i) = *(s + j);
      *(s + j) = p;
      j--;
    }
    j = strlen - 1;
    for (i = strlen / 2 + 1; i < (3 * strlen) / 4; i++) {
      p = *(s + i);
      *(s + i) = *(s + j);
      *(s + j) = p;
      j--;
    }
  }
  return s;
}